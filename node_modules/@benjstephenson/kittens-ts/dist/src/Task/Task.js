"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Task = void 0;
const fns = __importStar(require("./functions"));
/*
 * Represents a computation that *cannot* fail
 */
class Task {
    constructor(thunk) {
        this.thunk = thunk;
    }
    static of(a) {
        return fns.of(a);
    }
    run() {
        return this.thunk();
    }
    get() {
        return this.thunk;
    }
    // from prelude-ts
    // allow this Task to be thenable so can be awaited
    then(onResolved, onRejected) {
        return this.thunk().then((x) => onResolved(x), (rejected) => (onRejected ? onRejected(rejected) : Promise.reject(rejected)));
    }
    map(f) {
        return fns.map(f, this);
    }
    flatMap(f) {
        return fns.flatMap(f, this);
    }
}
exports.Task = Task;
